const request = require('request');
const { signLogin } = require('./sign');
const { api } = require('./config');

module.exports = {
  callGetObjectLists: async (opts) => {
    return new Promise((resolve) => {
      request(
        {
          'method': 'POST',
          'url': `${opts.endpoint}${api.getFileList}`.replace(':project_id', opts.projectId).replace('params', opts.params),
          'headers': {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            'signData': opts.signData,
          }),
        },
        (e, res) => {
          if (e) {
            throw new Error(`error get list object from eueno : ${e}`);
          } else {
            resolve(JSON.parse(res.body));
          }
        },
      );
    });
  },
  callGetObjectDetail: async (opts) => {
    return new Promise((resolve) => {
      request(
        {
          'method': 'POST',
          'url': `${opts.endpoint}${api.getFileDetail}`.replace(':fileId', opts.fileId),
          'headers': {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            'signData': opts.signData,
          }),
        },
        (e, res) => {
          if (e) {
            throw new Error(`error get object from eueno : ${e}`);
          } else {
            resolve(JSON.parse(res.body));
          }
        },
      );
    });
  },
  callDeleteFile: async (opts) => {
    return new Promise((resolve) => {
      request(
        {
          'method': 'DELETE',
          'url': `${opts.endpoint}${api.deleteFile}`.replace(':fileId', opts.fileId),
          'headers': {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            'signData': opts.signData,
          }),
        },
        (e, res) => {
          if (e) {
            throw new Error(`error delete object from eueno : ${e}`);
          } else {
            resolve(JSON.parse(res.body));
          }
        },
      );
    });
  },
  callGetSharedFiles: async (opts) => {
    const relFolderPathQuery = opts.relFolderPath ? `&relFolderPath=${opts.relFolderPath}` : '';
    return new Promise((resolve) => {
      request(
        {
          method: 'POST',
          url: `${opts.endpoint}${api.getSharedFiles}${relFolderPathQuery}`
            .replace('{page}', opts.page)
            .replace('{limit}', opts.limit)
            .replace('{projectId}', opts.projectId),
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            signData: opts.signData,
          }),
        },
        (e, res) => {
          if (e) {
            throw new Error(`error get shared files from eueno : ${e}`);
          } else {
            resolve(JSON.parse(res.body));
          }
        },
      );
    });
  },
  callCreateFolder: async (opts) => {
    return new Promise((resolve) => {
      request(
        {
          method: 'POST',
          url: `${opts.endpoint}${api.createFolder}`,
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify({
            projectId: opts.projectId,
            path: opts.path,
            signData: opts.signData,
          }),
        },
        (e, res) => {
          if (e) {
            throw new Error(`error create folder: ${e}`);
          } else {
            resolve(JSON.parse(res.body));
          }
        },
      );
    });
  },
};
